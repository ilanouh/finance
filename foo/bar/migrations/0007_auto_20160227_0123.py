# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-27 01:23
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('bar', '0006_auto_20160226_2314'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountTrackRecordComposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(unique=True, verbose_name='Date')),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('client_decided', models.BooleanField(default=False, verbose_name='Client Decided')),
                ('account_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bar.Account')),
                ('isin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bar.Product')),
            ],
        ),
        migrations.CreateModel(
            name='AccountTrackRecordEvolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(unique=True, verbose_name='Date')),
                ('account_amount', models.IntegerField(verbose_name='Account amount')),
                ('bench_amount', models.IntegerField(verbose_name='Benchmark amount')),
                ('account_perf_daily', models.IntegerField(verbose_name='Account daily performance')),
                ('bench_perf_daily', models.IntegerField(verbose_name='Benchmark daily performance')),
                ('diff_perf_daily', models.IntegerField(verbose_name='Difference daily performance')),
                ('account_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bar.Account')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAnalytic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.IntegerField(verbose_name='period')),
                ('date_start', models.DateTimeField(verbose_name='Date start')),
                ('date_end', models.DateTimeField(verbose_name='Date end')),
                ('pl', models.FloatField(max_length=250, verbose_name='profit & loss')),
                ('perf', models.FloatField(max_length=250, verbose_name='Perf')),
                ('perf_ann', models.FloatField(verbose_name='Performance annualisee')),
                ('vol', models.FloatField(verbose_name='Volatilite')),
                ('max_dd', models.FloatField(verbose_name='Maximum Drawdown')),
                ('isin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bar.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTrackRecordEvolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(unique=True, verbose_name='Date')),
                ('value', models.FloatField(verbose_name='Value')),
                ('isin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bar.Product')),
            ],
        ),
        migrations.AlterField(
            model_name='accountanalytic',
            name='bench_max_dd',
            field=models.FloatField(verbose_name='Benchmark Maximum Drawdown'),
        ),
        migrations.AlterField(
            model_name='accountanalytic',
            name='bench_perf',
            field=models.FloatField(verbose_name='Benchmark performance'),
        ),
        migrations.AlterField(
            model_name='accountanalytic',
            name='bench_perf_ann',
            field=models.FloatField(verbose_name='Benchmark performance annualisee'),
        ),
        migrations.AlterField(
            model_name='accountanalytic',
            name='bench_pl',
            field=models.FloatField(verbose_name='Benchmark profit & loss'),
        ),
        migrations.AlterField(
            model_name='accountanalytic',
            name='bench_vol',
            field=models.FloatField(verbose_name='Benchmark Volatilite'),
        ),
        migrations.AlterField(
            model_name='accountanalytic',
            name='period',
            field=models.IntegerField(unique=True, verbose_name='period'),
        ),
    ]
